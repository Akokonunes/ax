#!/usr/bin/env bash

AXIOM_PATH="$HOME/.axiom"
source "$AXIOM_PATH/interact/includes/vars.sh"
source "$AXIOM_PATH/interact/includes/functions.sh"
source "$AXIOM_PATH/interact/includes/system-notification.sh"
begin=$(date +%s)
start="$(pwd)"
BASEOS="$(uname)"
account_path=$(ls -la $AXIOM_PATH/axiom.json | rev | cut -d " " -f 1 | rev)
accounts=$(ls -l "$AXIOM_PATH/accounts/" | grep "json" | grep -v 'total ' | awk '{ print $9 }' | sed 's/\.json//g')
current=$(readlink -f "$AXIOM_PATH/axiom.json" | rev | cut -d / -f 1 | rev | cut -d . -f 1)> /dev/null 2>&1

function usage() {
    echo -e "${BWhite}Usage:${Color_Off} axiom-power <command> <pattern>"
    echo
    echo -e "${BWhite}Description:${Color_Off}"
    echo -e "  Power on, off, or reboot one or more Axiom instances by name or pattern."
    echo
    echo -e "${BWhite}Commands:${Color_Off}"
    echo -e "  on <pattern>              Power on instance(s) matching name or wildcard"
    echo -e "  off <pattern>             Power off instance(s) matching name or wildcard"
    echo -e "  reboot <pattern>          Reboot instance(s) matching name or wildcard"
    echo -e "  help, --help, -h          Show this help menu"
    echo
    echo -e "${BWhite}Examples:${Color_Off}"
    echo -e "  ${BGreen}axiom-power on 'rez*'${Color_Off}                        # Power on all instances starting with 'rez'"
    echo -e "  ${BGreen}axiom-power off '*'${Color_Off}                          # Power off all instances"
    echo -e "  ${BGreen}axiom-power reboot test01${Color_Off}                    # Reboot instance named 'test01'"
    echo
}

###########################################################################################################
# Declare defaut variables
on=false
help=true
off=false
reboot=false
force=false

# Parse command line arguments
#
i=0
for arg in "$@"
do
    i=$((i+1))
    if [[  ! " ${pass[@]} " =~ " ${i} " ]]; then
        set=false
        if [[ "$i" == 1 ]]; then
            input="$1"
            set=true
            pass+=($i)
        fi
        if [[ "$arg" == "on" ]]; then
            n=$((i+1))
            on=true
            instance=$(echo ${!n})
            set=true
            pass+=($i)
            pass+=($n)
        fi
        if [[ "$arg" == "off" ]]; then
            n=$((i+1))
            off=true
            instance=$(echo ${!n})
            set=true
            pass+=($i)
            pass+=($n)
        fi
        if [[ "$arg" == "reboot" ]]; then
            n=$((i+1))
            reboot=true
            instance=$(echo ${!n})
            set=true
            pass+=($i)
            pass+=($n)
        fi
        if [[ "$arg" == "--help" ]] || [[ "$arg" == "-h" ]] || [[ "$arg" == "help" ]]; then
            usage
            exit
            set=true
            pass+=($i)
        fi
        if [[ "$arg" == "--force" ]] || [[ "$arg" == "-f" ]]; then
            force=true
            set=true
            pass+=($i)
        fi
        if [[ "$arg" == "--debug" ]]; then
            debug="true"
            set=true
            pass+=($i)
        fi
        if  [[ "$set" != "true" ]]; then
            args="$args $arg"
        fi

    fi
done

# Display Help Menu
#
if [[ "$@" == "--help" ]] || [[ "$@" == "-h" ]] || [[ "$@" == "" ]] || [[ "$@" == "help" ]]; then
usage
exit
fi

# Power Off Snapshots
#
if [[ "$off" == "true" ]]; then
    instances=$(query_instances "$@"|sort -u|tr ' ' '\n')

    if [[ ${#instances} == 0 ]];then
        usage
        exit
    fi
    for i in $(echo $instances);
        do
            echo -e "${Yellow}Powering off instance: $i${Color_Off}"
            poweroff $i $force;
        done
fi

# Power On Snapshots
#
if [[ "$on" == "true" ]]; then
    instances=$(query_instances "$@"|sort -u|tr ' ' '\n')

    if [[ ${#instances} == 0 ]];then
        usage
        exit
    fi

    for i in $(echo $instances);
        do
            echo -e "${Yellow}Powering on instance: $i${Color_Off}"
            poweron $i $force;
        done
fi

# Reboot Snapshots
#
if [[ "$reboot" == "true" ]]; then
    instances=$(query_instances "$@"|sort -u|tr ' ' '\n')

  if [[ ${#instances} == 0 ]];then
        usage
        exit
    fi

    for i in $(echo $instances);
        do
            echo -e "${Yellow}Rebooting instance: $i${Color_Off}"
            reboot $i $force;
        done
fi
